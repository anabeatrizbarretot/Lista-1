/******************************************************************************
A equa√ß√£o do segundo grau recebe esse nome porque √© uma equa√ß√£o polinomial cujo termo de maior
grau est√° elevado ao quadrado. Essa equa√ß√£o √© tamb√©m chamada de equa√ß√£o quadr√°tica, √© representada
por:

ax^2+ bx + c = 0
Na equa√ß√£o do segundo grau, o x √© a inc√≥gnita e representa um valor desconhecido. As letras a, b e c s√£o
chamadas de coeficientes da equa√ß√£o. Os coeficientes s√£o n√∫meros reais e o coeficiente a tem que ser
diferente de zero, pois do contr√°rio passa a ser uma equa√ß√£o do primeiro grau. Resolver uma equa√ß√£o de
segundo Grau, significa buscar valores reais de x, que tornam a equa√ß√£o verdadeira. Esses valores s√£o
denominados ra√≠zes da equa√ß√£o. Uma equa√ß√£o quadr√°tica possui no m√°ximo duas ra√≠zes reais.
O m√©todo conhecido como m√©todo de Bhaskara ou f√≥rmula de Bhaskara aponta que as ra√≠zes de uma
equa√ß√£o do segundo grau do tipo ax2
 + bx + c = 0 √© dada pela seguinte rela√ß√£o:
Elabore um algoritmo para calcular as ra√≠zes de uma equa√ß√£o de segundo grau que utilize a f√≥rmula de
Bhaskara.
Casos de teste:
a) Para a equa√ß√£o ùë•^2 ‚àí 2ùë• ‚àí 3 = 0, os coeficientes s√£o a = 1, b = -2 e c = -3, e as ra√≠zes s√£o x‚Äô = 3 e
x‚Äô‚Äô = -1;
b) Para a equa√ß√£o ‚àíùë•^2 ‚àí 4ùë• + 5 = 0, os coeficientes s√£o a = -1, b = -4 e c = 5, e as ra√≠zes s√£o x‚Äô = -5 e
x‚Äô‚Äô = 1. 


*******************************************************************************/
#include <stdio.h>
#include <math.h> // Biblioteca para sqrt()

int main() {
    double a, b, c; 
    double delta, x1, x2;

    printf("Digite o valor de a: ");
    scanf("%lf", &a);

    printf("Digite o valor de b: ");
    scanf("%lf", &b);

    printf("Digite o valor de c: ");
    scanf("%lf", &c);

    delta = b*b - 4*a*c;

    if (delta < 0) {
        printf("N√£o existem ra√≠zes reais.\n");
    } else {
        x1 = (-b + sqrt(delta)) / (2*a);
        x2 = (-b - sqrt(delta)) / (2*a);

        printf("As ra√≠zes da equa√ß√£o s√£o:\n");
        printf("x' = %.0lf\n", x1);
        printf("x'' = %.0lf\n", x2);
    }

    return 0;
}
